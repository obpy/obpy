=====
Todos
=====

.. note::

    This file will be soon removed in favor of Trac (http://trac.edgewall.org),
    as soon as TuxFamily upgrades their web servers to support Trac 0.12 (which
    should be during the next week or so).

High priority (release-stoppers)
================================

Bloxworks
---------

Since this is the main new feature in OpenBlox 0.7, implementing BloxWorks is an
*extremely* high priority task.
There are some considerations, namely:

* Where to keep the source code. SourceForge supports
  multiple repos per project,so maybe there?
* The OpenBlox GUI framework isn't completed yet, and
  Bloxworks relies a *lot* upon a GUI

The README
----------

The README is quite out-of-date, and needs to be updated. A product is only
as good as its documentation.

Some specific things that need to be changed/added/removed are:

* The FAQ just points to the OpenBlox wiki (though this might should just stay as-is)
* There are still a few OpenBlox 0.6.2 references lurking around in it
* Lupa and Panda3D have both gone through at least one release since the
  README was last updated; the README needs to be updated to reflect this

User Documentation
------------------

There's very little in the way of end-user documentation. Most of the existing
documentation is contained in the OpenBlox wiki (and some of it will be
obsolete/erroneous with the coming of OpenBlox 0.7).

Some things to consider concerning end-user documentation are:

* Where to put it. Perhaps it should also be contained in the Sphinx-generated
  documentation?
* Should the documentation be available online, and if so, where?
* If the documentation is put into the Sphinx-generated documentation, does that
  mean the OpenBlox wiki is no longer needed?

Medium priority
===============

Testing
--------

Most of the code right now (around 70%) is only tested by running each of the
examples in ``examples/api``, which is pretty inconvenient, as
none of those examples can be automatically run/stopped. The solution to this
is to use unit tests to automatically test the code.

Although, most of the code that isn't already covered by unit tests has been
sucessfully tested in the field (being actually deployed and used,
and little to no bug reports coming back), so this can wait until OpenBlox 0.7.1/2,
if it has to.

Mac OSX installer
-----------------

Currently, to install OpenBlox on Mac OSX, you have to have some knowledge of
the terminal (due to InstallJammer not working on Mac OSX). Until an
OSX maintainer comes on board for OpenBlox (or an alternative installer generator
popping up), this will probably stay this way for a while.

OBPlay
------

With BloxWorks using OpenBlox's custom, on-screen GUI toolkit, OBPlay's use of
wxPython is... wierd, not to mention wastful of space (the wxPython installer
packs an extra 11MB onto the Windows installer). It should be re-written using
OpenBlox's GUI toolkit.

Granted, this is more an aesthetic issue than anything
else, and thus can remain as-is, if push comes to shove.

Low priority
============

OBFreeze
--------

This *is* an exciting feature, but it's currently not necessary, so it can wait
until OpenBlox 0.7.1/2/3 or even OpenBlox 0.8, if it has to.